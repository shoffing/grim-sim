/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

export const Colors = {
  light: {
    backdrop: 'rgba(59, 45, 41, 0.4)',
    background: 'rgb(255, 251, 255)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(251, 241, 242)',
      level2: 'rgb(249, 235, 235)',
      level3: 'rgb(246, 229, 227)',
      level4: 'rgb(246, 226, 224)',
      level5: 'rgb(244, 222, 219)',
    },
    error: 'rgb(186, 26, 26)',
    errorContainer: 'rgb(255, 218, 214)',
    inverseOnSurface: 'rgb(251, 238, 235)',
    inversePrimary: 'rgb(255, 181, 160)',
    inverseSurface: 'rgb(54, 47, 45)',
    onBackground: 'rgb(32, 26, 24)',
    onError: 'rgb(255, 255, 255)',
    onErrorContainer: 'rgb(65, 0, 2)',
    onPrimary: 'rgb(255, 255, 255)',
    onPrimaryContainer: 'rgb(59, 9, 0)',
    onSecondary: 'rgb(255, 255, 255)',
    onSecondaryContainer: 'rgb(0, 29, 50)',
    onSurface: 'rgb(32, 26, 24)',
    onSurfaceDisabled: 'rgba(32, 26, 24, 0.38)',
    onSurfaceVariant: 'rgb(83, 67, 63)',
    onTertiary: 'rgb(255, 255, 255)',
    onTertiaryContainer: 'rgb(38, 26, 0)',
    outline: 'rgb(133, 115, 110)',
    outlineVariant: 'rgb(216, 194, 188)',
    primary: 'rgb(176, 46, 0)',
    primaryContainer: 'rgb(255, 219, 209)',
    scrim: 'rgb(0, 0, 0)',
    secondary: 'rgb(0, 99, 154)',
    secondaryContainer: 'rgb(206, 229, 255)',
    shadow: 'rgb(0, 0, 0)',
    surface: 'rgb(255, 251, 255)',
    surfaceDisabled: 'rgba(32, 26, 24, 0.12)',
    surfaceVariant: 'rgb(245, 222, 216)',
    tertiary: 'rgb(121, 89, 0)',
    tertiaryContainer: 'rgb(255, 223, 160)',
  },
  dark: {
    backdrop: 'rgba(59, 45, 41, 0.4)',
    background: 'rgb(32, 26, 24)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(43, 34, 31)',
      level2: 'rgb(50, 38, 35)',
      level3: 'rgb(57, 43, 39)',
      level4: 'rgb(59, 45, 40)',
      level5: 'rgb(63, 48, 43)',
    },
    error: 'rgb(255, 180, 171)',
    errorContainer: 'rgb(147, 0, 10)',
    inverseOnSurface: 'rgb(54, 47, 45)',
    inversePrimary: 'rgb(176, 46, 0)',
    inverseSurface: 'rgb(237, 224, 221)',
    onBackground: 'rgb(237, 224, 221)',
    onError: 'rgb(105, 0, 5)',
    onErrorContainer: 'rgb(255, 180, 171)',
    onPrimary: 'rgb(96, 21, 0)',
    onPrimaryContainer: 'rgb(255, 219, 209)',
    onSecondary: 'rgb(0, 51, 83)',
    onSecondaryContainer: 'rgb(206, 229, 255)',
    onSurface: 'rgb(237, 224, 221)',
    onSurfaceDisabled: 'rgba(237, 224, 221, 0.38)',
    onSurfaceVariant: 'rgb(216, 194, 188)',
    onTertiary: 'rgb(64, 45, 0)',
    onTertiaryContainer: 'rgb(255, 223, 160)',
    outline: 'rgb(160, 140, 135)',
    outlineVariant: 'rgb(83, 67, 63)',
    primary: 'rgb(255, 181, 160)',
    primaryContainer: 'rgb(135, 33, 0)',
    scrim: 'rgb(0, 0, 0)',
    secondary: 'rgb(150, 204, 255)',
    secondaryContainer: 'rgb(0, 74, 117)',
    shadow: 'rgb(0, 0, 0)',
    surface: 'rgb(32, 26, 24)',
    surfaceDisabled: 'rgba(237, 224, 221, 0.12)',
    surfaceVariant: 'rgb(83, 67, 63)',
    tertiary: 'rgb(248, 189, 42)',
    tertiaryContainer: 'rgb(92, 67, 0)',
  },
};

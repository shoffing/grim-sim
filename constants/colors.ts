/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

const material = {
  red50: '#FFEBEE',
  red100: '#FFCDD2',
  red200: '#EF9A9A',
  red300: '#E57373',
  red400: '#EF5350',
  red500: '#F44336',
  red600: '#E53935',
  red700: '#D32F2F',
  red800: '#C62828',
  red900: '#B71C1C',
  redA100: '#FF8A80',
  redA200: '#FF5252',
  redA300: '#FF1744',
  redA400: '#D50000',
  pink50: '#FCE4EC',
  pink100: '#F8BBD0',
  pink200: '#F48FB1',
  pink300: '#F06292',
  pink400: '#EC407A',
  pink500: '#E91E63',
  pink600: '#D81B60',
  pink700: '#C2185B',
  pink800: '#AD1457',
  pink900: '#880E4F',
  pinkA100: '#FF80AB',
  pinkA200: '#FF4081',
  pinkA300: '#F50057',
  pinkA400: '#C51162',
  purple50: '#F3E5F5',
  purple100: '#E1BEE7',
  purple200: '#CE93D8',
  purple300: '#BA68C8',
  purple400: '#AB47BC',
  purple500: '#9C27B0',
  purple600: '#8E24AA',
  purple700: '#7B1FA2',
  purple800: '#6A1B9A',
  purple900: '#4A148C',
  purpleA100: '#EA80FC',
  purpleA200: '#E040FB',
  purpleA300: '#D500F9',
  purpleA400: '#AA00FF',
  deepPurple50: '#EDE7F6',
  deepPurple100: '#D1C4E9',
  deepPurple200: '#B39DDB',
  deepPurple300: '#9575CD',
  deepPurple400: '#7E57C2',
  deepPurple500: '#673AB7',
  deepPurple600: '#5E35B1',
  deepPurple700: '#512DA8',
  deepPurple800: '#4527A0',
  deepPurple900: '#311B92',
  deepPurpleA100: '#B388FF',
  deepPurpleA200: '#7C4DFF',
  deepPurpleA300: '#651FFF',
  deepPurpleA400: '#6200EA',
  indigo50: '#E8EAF6',
  indigo100: '#C5CAE9',
  indigo200: '#9FA8DA',
  indigo300: '#7986CB',
  indigo400: '#5C6BC0',
  indigo500: '#3F51B5',
  indigo600: '#3949AB',
  indigo700: '#303F9F',
  indigo800: '#283593',
  indigo900: '#1A237E',
  indigoA100: '#8C9EFF',
  indigoA200: '#536DFE',
  indigoA300: '#3D5AFE',
  indigoA400: '#304FFE',
  blue50: '#E3F2FD',
  blue100: '#BBDEFB',
  blue200: '#90CAF9',
  blue300: '#64B5F6',
  blue400: '#42A5F5',
  blue500: '#2196F3',
  blue600: '#1E88E5',
  blue700: '#1976D2',
  blue800: '#1565C0',
  blue900: '#0D47A1',
  blueA100: '#82B1FF',
  blueA200: '#448AFF',
  blueA300: '#2979FF',
  blueA400: '#2962FF',
  lightBlue50: '#E1F5FE',
  lightBlue100: '#B3E5FC',
  lightBlue200: '#81D4FA',
  lightBlue300: '#4FC3F7',
  lightBlue400: '#29B6F6',
  lightBlue500: '#03A9F4',
  lightBlue600: '#039BE5',
  lightBlue700: '#0288D1',
  lightBlue800: '#0277BD',
  lightBlue900: '#01579B',
  lightBlueA100: '#80D8FF',
  lightBlueA200: '#40C4FF',
  lightBlueA300: '#00B0FF',
  lightBlueA400: '#0091EA',
  cyan50: '#E0F7FA',
  cyan100: '#B2EBF2',
  cyan200: '#80DEEA',
  cyan300: '#4DD0E1',
  cyan400: '#26C6DA',
  cyan500: '#00BCD4',
  cyan600: '#00ACC1',
  cyan700: '#0097A7',
  cyan800: '#00838F',
  cyan900: '#006064',
  cyanA100: '#84FFFF',
  cyanA200: '#18FFFF',
  cyanA300: '#00E5FF',
  cyanA400: '#00B8D4',
  teal50: '#E0F2F1',
  teal100: '#B2DFDB',
  teal200: '#80CBC4',
  teal300: '#4DB6AC',
  teal400: '#26A69A',
  teal500: '#009688',
  teal600: '#00897B',
  teal700: '#00796B',
  teal800: '#00695C',
  teal900: '#004D40',
  tealA100: '#A7FFEB',
  tealA200: '#64FFDA',
  tealA300: '#1DE9B6',
  tealA400: '#00BFA5',
  green50: '#E8F5E9',
  green100: '#C8E6C9',
  green200: '#A5D6A7',
  green300: '#81C784',
  green400: '#66BB6A',
  green500: '#4CAF50',
  green600: '#43A047',
  green700: '#388E3C',
  green800: '#2E7D32',
  green900: '#1B5E20',
  greenA100: '#B9F6CA',
  greenA200: '#69F0AE',
  greenA300: '#00E676',
  greenA400: '#00C853',
  lightGreen50: '#F1F8E9',
  lightGreen100: '#DCEDC8',
  lightGreen200: '#C5E1A5',
  lightGreen300: '#AED581',
  lightGreen400: '#9CCC65',
  lightGreen500: '#8BC34A',
  lightGreen600: '#7CB342',
  lightGreen700: '#689F38',
  lightGreen800: '#558B2F',
  lightGreen900: '#33691E',
  lightGreenA100: '#CCFF90',
  lightGreenA200: '#B2FF59',
  lightGreenA300: '#76FF03',
  lightGreenA400: '#64DD17',
  lime50: '#F9FBE7',
  lime100: '#F0F4C3',
  lime200: '#E6EE9C',
  lime300: '#DCE775',
  lime400: '#D4E157',
  lime500: '#CDDC39',
  lime600: '#C0CA33',
  lime700: '#AFB42B',
  lime800: '#9E9D24',
  lime900: '#827717',
  limeA100: '#F4FF81',
  limeA200: '#EEFF41',
  limeA300: '#C6FF00',
  limeA400: '#AEEA00',
  yellow50: '#FFFDE7',
  yellow100: '#FFF9C4',
  yellow200: '#FFF59D',
  yellow300: '#FFF176',
  yellow400: '#FFEE58',
  yellow500: '#FFEB3B',
  yellow600: '#FDD835',
  yellow700: '#FBC02D',
  yellow800: '#F9A825',
  yellow900: '#F57F17',
  yellowA100: '#FFFF8D',
  yellowA200: '#FFFF00',
  yellowA300: '#FFEA00',
  yellowA400: '#FFD600',
  amber50: '#FFF8E1',
  amber100: '#FFECB3',
  amber200: '#FFE082',
  amber300: '#FFD54F',
  amber400: '#FFCA28',
  amber500: '#FFC107',
  amber600: '#FFB300',
  amber700: '#FFA000',
  amber800: '#FF8F00',
  amber900: '#FF6F00',
  amberA100: '#FFE57F',
  amberA200: '#FFD740',
  amberA300: '#FFC400',
  amberA400: '#FFAB00',
  orange50: '#FFF3E0',
  orange100: '#FFE0B2',
  orange200: '#FFCC80',
  orange300: '#FFB74D',
  orange400: '#FFA726',
  orange500: '#FF9800',
  orange600: '#FB8C00',
  orange700: '#F57C00',
  orange800: '#EF6C00',
  orange900: '#E65100',
  orangeA100: '#FFD180',
  orangeA200: '#FFAB40',
  orangeA300: '#FF9100',
  orangeA400: '#FF6D00',
  deepOrange50: '#FBE9E7',
  deepOrange100: '#FFCCBC',
  deepOrange200: '#FFAB91',
  deepOrange300: '#FF8A65',
  deepOrange400: '#FF7043',
  deepOrange500: '#FF5722',
  deepOrange600: '#F4511E',
  deepOrange700: '#E64A19',
  deepOrange800: '#D84315',
  deepOrange900: '#BF360C',
  deepOrangeA100: '#FF9E80',
  deepOrangeA200: '#FF6E40',
  deepOrangeA300: '#FF3D00',
  deepOrangeA400: '#DD2C00',
  brown50: '#EFEBE9',
  brown100: '#D7CCC8',
  brown200: '#BCAAA4',
  brown300: '#A1887F',
  brown400: '#8D6E63',
  brown500: '#795548',
  brown600: '#6D4C41',
  brown700: '#5D4037',
  brown800: '#4E342E',
  brown900: '#3E2723',
  grey50: '#FAFAFA',
  grey100: '#F5F5F5',
  grey200: '#EEEEEE',
  grey300: '#E0E0E0',
  grey400: '#BDBDBD',
  grey500: '#9E9E9E',
  grey600: '#757575',
  grey700: '#616161',
  grey800: '#424242',
  grey900: '#212121',
  blueGrey50: '#ECEFF1',
  blueGrey100: '#CFD8DC',
  blueGrey200: '#B0BEC5',
  blueGrey300: '#90A4AE',
  blueGrey400: '#78909C',
  blueGrey500: '#607D8B',
  blueGrey600: '#546E7A',
  blueGrey700: '#455A64',
  blueGrey800: '#37474F',
  blueGrey900: '#263238',
};

const DARK_LEVEL = 900;
const COLOR_DARK = {
  'red': material[`red${DARK_LEVEL}`],
  'pink': material[`pink${DARK_LEVEL}`],
  'purple': material[`purple${DARK_LEVEL}`],
  'deepPurple': material[`deepPurple${DARK_LEVEL}`],
  'indigo': material[`indigo${DARK_LEVEL}`],
  'blue': material[`blue${DARK_LEVEL}`],
  'lightBlue': material[`lightBlue${DARK_LEVEL}`],
  'cyan': material[`cyan${DARK_LEVEL}`],
  'teal': material[`teal${DARK_LEVEL}`],
  'green': material[`green${DARK_LEVEL}`],
  'lightGreen': material[`lightGreen${DARK_LEVEL}`],
  'lime': material[`lime${DARK_LEVEL}`],
  'yellow': material[`yellow${DARK_LEVEL}`],
  'amber': material[`amber${DARK_LEVEL}`],
  'orange': material[`orange${DARK_LEVEL}`],
  'deepOrange': material[`deepOrange${DARK_LEVEL}`],
  'brown': material[`brown${DARK_LEVEL}`],
  'grey': material[`grey${DARK_LEVEL}`],
  'blueGrey': material[`blueGrey${DARK_LEVEL}`],
};

const LIGHT_LEVEL = 50;
const COLOR_LIGHT = {
  'red': material[`red${LIGHT_LEVEL}`],
  'pink': material[`pink${LIGHT_LEVEL}`],
  'purple': material[`purple${LIGHT_LEVEL}`],
  'deepPurple': material[`deepPurple${LIGHT_LEVEL}`],
  'indigo': material[`indigo${LIGHT_LEVEL}`],
  'blue': material[`blue${LIGHT_LEVEL}`],
  'lightBlue': material[`lightBlue${LIGHT_LEVEL}`],
  'cyan': material[`cyan${LIGHT_LEVEL}`],
  'teal': material[`teal${LIGHT_LEVEL}`],
  'green': material[`green${LIGHT_LEVEL}`],
  'lightGreen': material[`lightGreen${LIGHT_LEVEL}`],
  'lime': material[`lime${LIGHT_LEVEL}`],
  'yellow': material[`yellow${LIGHT_LEVEL}`],
  'amber': material[`amber${LIGHT_LEVEL}`],
  'orange': material[`orange${LIGHT_LEVEL}`],
  'deepOrange': material[`deepOrange${LIGHT_LEVEL}`],
  'brown': material[`brown${LIGHT_LEVEL}`],
  'grey': material[`grey${LIGHT_LEVEL}`],
  'blueGrey': material[`blueGrey${LIGHT_LEVEL}`],
};

export const Colors = {
  light: {
    backdrop: 'rgba(59, 45, 41, 0.4)',
    background: 'rgb(255, 251, 255)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(251, 241, 242)',
      level2: 'rgb(249, 235, 235)',
      level3: 'rgb(246, 229, 227)',
      level4: 'rgb(246, 226, 224)',
      level5: 'rgb(244, 222, 219)',
    },
    error: 'rgb(186, 26, 26)',
    errorContainer: 'rgb(255, 218, 214)',
    inverseOnSurface: 'rgb(251, 238, 235)',
    inversePrimary: 'rgb(255, 181, 160)',
    inverseSurface: 'rgb(54, 47, 45)',
    onBackground: 'rgb(32, 26, 24)',
    onError: 'rgb(255, 255, 255)',
    onErrorContainer: 'rgb(65, 0, 2)',
    onPrimary: 'rgb(255, 255, 255)',
    onPrimaryContainer: 'rgb(59, 9, 0)',
    onSecondary: 'rgb(255, 255, 255)',
    onSecondaryContainer: 'rgb(0, 29, 50)',
    onSurface: 'rgb(32, 26, 24)',
    onSurfaceDisabled: 'rgba(32, 26, 24, 0.38)',
    onSurfaceVariant: 'rgb(83, 67, 63)',
    onTertiary: 'rgb(255, 255, 255)',
    onTertiaryContainer: 'rgb(38, 26, 0)',
    outline: 'rgb(133, 115, 110)',
    outlineVariant: 'rgb(216, 194, 188)',
    primary: 'rgb(176, 46, 0)',
    primaryContainer: 'rgb(255, 219, 209)',
    scrim: 'rgb(0, 0, 0)',
    secondary: 'rgb(0, 99, 154)',
    secondaryContainer: 'rgb(206, 229, 255)',
    shadow: 'rgb(0, 0, 0)',
    surface: 'rgb(255, 251, 255)',
    surfaceDisabled: 'rgba(32, 26, 24, 0.12)',
    surfaceVariant: 'rgb(245, 222, 216)',
    tertiary: 'rgb(121, 89, 0)',
    tertiaryContainer: 'rgb(255, 223, 160)',
  },
  dark: {
    backdrop: 'rgba(59, 45, 41, 0.4)',
    background: 'rgb(32, 26, 24)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(43, 34, 31)',
      level2: 'rgb(50, 38, 35)',
      level3: 'rgb(57, 43, 39)',
      level4: 'rgb(59, 45, 40)',
      level5: 'rgb(63, 48, 43)',
    },
    error: 'rgb(255, 180, 171)',
    errorContainer: 'rgb(147, 0, 10)',
    inverseOnSurface: 'rgb(54, 47, 45)',
    inversePrimary: 'rgb(176, 46, 0)',
    inverseSurface: 'rgb(237, 224, 221)',
    onBackground: 'rgb(237, 224, 221)',
    onError: 'rgb(105, 0, 5)',
    onErrorContainer: 'rgb(255, 180, 171)',
    onPrimary: 'rgb(96, 21, 0)',
    onPrimaryContainer: 'rgb(255, 219, 209)',
    onSecondary: 'rgb(0, 51, 83)',
    onSecondaryContainer: 'rgb(206, 229, 255)',
    onSurface: 'rgb(237, 224, 221)',
    onSurfaceDisabled: 'rgba(237, 224, 221, 0.38)',
    onSurfaceVariant: 'rgb(216, 194, 188)',
    onTertiary: 'rgb(64, 45, 0)',
    onTertiaryContainer: 'rgb(255, 223, 160)',
    outline: 'rgb(160, 140, 135)',
    outlineVariant: 'rgb(83, 67, 63)',
    primary: 'rgb(255, 181, 160)',
    primaryContainer: 'rgb(135, 33, 0)',
    scrim: 'rgb(0, 0, 0)',
    secondary: 'rgb(150, 204, 255)',
    secondaryContainer: 'rgb(0, 74, 117)',
    shadow: 'rgb(0, 0, 0)',
    surface: 'rgb(32, 26, 24)',
    surfaceDisabled: 'rgba(237, 224, 221, 0.12)',
    surfaceVariant: 'rgb(83, 67, 63)',
    tertiary: 'rgb(248, 189, 42)',
    tertiaryContainer: 'rgb(92, 67, 0)',
  },
  material,
};

export type ColorContainerType = (keyof typeof COLOR_DARK & keyof typeof COLOR_LIGHT);
export const COLOR_CONTAINER_COLORS = Object.keys({ ...COLOR_DARK, ...COLOR_LIGHT });

export const colorContainer = (dark: boolean, color?: string) => {
  if (color && color in COLOR_DARK && color in COLOR_LIGHT) {
    const validColor = color as ColorContainerType;
    return dark ? COLOR_DARK[validColor] : COLOR_LIGHT[validColor];
  }
  return dark ? COLOR_DARK['blue'] : COLOR_LIGHT['blue'];
};

export const onColorContainer = (dark: boolean, color?: string) => {
  if (color && color in COLOR_DARK && color in COLOR_LIGHT) {
    const validColor = color as ColorContainerType;
    return dark ? COLOR_LIGHT[validColor] : COLOR_DARK[validColor];
  }
  return dark ? COLOR_LIGHT['blue'] : COLOR_DARK['blue'];
};

